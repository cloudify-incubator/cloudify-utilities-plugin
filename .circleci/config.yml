version: 2.1

orbs:
  node: cloudify/public-unittest-orb@1.0.2 #orb version
  wagonorb: cloudify/wagon-bulder-orb@1.0.3 #orb version
  releaseorb: cloudify/release-orb@1.0.5 #orb version

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi


executors:
  py36:
    docker:
      - image: circleci/python:3.6

  cloudify-machine:
    machine:
      image: ubuntu-1604:201903-01

  cloudify-machine-py3:
    machine:
      image: ubuntu-1604:201903-01

commands:
  create_manager_container_505:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive --remote
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip===20.3.3
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.5/ga-release/cloudify-docker-manager-5.0.5.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.5.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.5.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip

  create_manager_container_py3:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive --remote
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip===20.3.3
      - run:
          name: install cloudify
          command: |
            pip install -r test-requirements.txt
      - run:
          name: download manager docker image
          command:  wget http://repository.cloudifysource.org/cloudify/6.2.0/ga-release/cloudify-manager-aio-docker-6.2.0-ga.tar
      - run:
          name: load docker manager image
          command: docker load -i cloudify-manager-aio-docker-6.2.0-ga.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudify-manager-aio-x86_64
      - run:
          name: wait for starter
          command: docker exec -it cfy_manager cfy_manager wait-for-starter
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip

  prepare_test_manager:
    steps:
      - run: ecosystem-test prepare-test-manager -l $TEST_LICENSE --bundle-path workspace/build/cloudify-plugins-bundle.tgz

  run_cloudinit_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/utilities-examples/cloudify_cloudinit/simple.yaml --test-id=cloudify_cloudinit --on-failure=uninstall-force

  run_ssh_key_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/utilities-examples/cloudify_ssh_key/create-secret-agent-key.yaml --test-id=cloudify_ssh_key --on-failure=uninstall-force

  run_secrets_test:
      steps:
        - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/utilities-examples/cloudify_secrets/write-secret-blueprint.yaml --test-id=cloudify_secrets --on-failure=uninstall-force

  run_rest_test:
      steps:
        - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/utilities-examples/cloudify_rest/example-github-status.yaml --test-id=cloudify_rest --on-failure=uninstall-force

jobs:
  integration_tests_505:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - create_manager_container_505
      - prepare_test_manager
      - run_cloudinit_test
      - run_ssh_key_test
      - run_secrets_test
      - run_rest_test

  integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - create_manager_container_py3
      - prepare_test_manager
      - run_cloudinit_test
      - run_ssh_key_test
      - run_secrets_test
      - run_rest_test

workflows:
  version: 2
  tests:
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - node/validate_documentation_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/build_bundle:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
      # - integration_tests_505:
      #     requires:
      #       - build_bundle
      #     filters:
      #       branches:
      #         only: /([0-9\.]*\-build|master|dev)/
      - integration_tests_py3:
          requires:
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - releaseorb/release:
          filters:
            branches:
              only: /master/
          requires:
            - node/unittests_job
            - wagonorb/rhel_wagon
            - wagonorb/wagon
            - node/validate_version_job
            - node/validate_documentation_job
            # - integration_tests_505
            - integration_tests_py3
#      - merge_docs:
#          filters:
#            branches:
#              only: /master/
#          requires:
#            - release
#            - validate_documentation

  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * 0,1,3,5"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/build_bundle:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
      # - integration_tests_505:
      #     requires:
      #       - build_bundle
      #     filters:
      #       branches:
      #         only: /([0-9\.]*\-build|master|dev)/
      - integration_tests_py3:
          requires:
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
