tosca_definitions_version: cloudify_dsl_1_0

imports:
    - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-manager/3.2.1-build/resources/rest-service/cloudify/types/types.yaml
    - https://raw.githubusercontent.com/cloudify-cosmo/tosca-vcloud-plugin/1.2.1m5/plugin.yaml
    - types/agentless.yaml

inputs:

    vcloud_username:
        type: string

    vcloud_password:
        type: string
        default: ''

    vcloud_token:
        type: string
        default: ''

    vcloud_url:
        type: string

    vcloud_service:
        type: string

    vcloud_service_type:
        type: string
        default: 'subscription'

    vcloud_instance:
        type: string
        default: ''

    vcloud_api_version:
        type: string
        default: '5.6'

    mongo_ssh:
        type: string

    vcloud_org_url:
        type: string
        default: ''

    vcloud_org:
        type: string

    vcloud_vdc:
        type: string

    catalog:
        type: string
        default: Public Catalog

    template:
        type: string
        default: Ubuntu Server 12.04 LTS (amd64 20150127)

    server_cpu:
        type: string
        default: 2

    server_memory:
        type: string
        default: 4096

    network_use_existing:
        type: boolean

    common_network_name:
        type: string

    mongo_ip_address:
        type: string

    common_network_public_nat_use_existing:
        type: boolean

    edge_gateway:
        type: string

    server_user:
        type: string

    user_public_key:
        type: string

    user_private_key:
        type: string

node_types:

    agentless-nodecellar.nodes.ParentTypeServer:
        derived_from: cloudify.vcloud.nodes.Server
        properties:
            install_agent:
                default: false

    vcloud_configuration:
        derived_from: cloudify.nodes.Root
        properties:
            vcloud_config: {}

node_templates:

    vcloud_configuration:
        type: vcloud_configuration
        properties:
            vcloud_config:
                username: { get_input: vcloud_username }
                password: { get_input: vcloud_password }
                token: { get_input: vcloud_token }
                url: { get_input: vcloud_url }
                service: { get_input: vcloud_service }
                org: { get_input: vcloud_org }
                vdc: { get_input: vcloud_vdc }
                service_type: { get_input: vcloud_service_type }
                instance: { get_input: vcloud_instance }
                api_version: { get_input: vcloud_api_version }
                org_url: { get_input: vcloud_org_url }
                edge_gateway: { get_input: edge_gateway }

    common_keypair:
        type: cloudify.vcloud.nodes.KeyPair
        properties:
            public_key:
                user: { get_input: server_user }
                key: { get_input: user_public_key }
            private_key:
                key: { get_input: user_private_key }

    mongod_host:
        type: agentless-nodecellar.nodes.ParentTypeServer
        properties:
            server:
                catalog: { get_input: catalog }
                template: { get_input: template }
                guest_customization:
                    public_keys:
                        - { get_property: [common_keypair, public_key] }
                hardware:
                    cpu: { get_input: server_cpu }
                    memory: { get_input: server_memory }
            management_network: { get_input: common_network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        relationships:
            - target: common_keypair
              type: cloudify.vcloud.server_connected_to_keypair
            - target: mongo_server_nat
              type: cloudify.vcloud.server_connected_to_public_nat
            - target: node_security_group
              type: cloudify.vcloud.server_connected_to_security_group
            - target: common_network
              type: cloudify.vcloud.server_connected_to_network

    common_network:
        type: cloudify.vcloud.nodes.Network
        properties:
            use_external_resource: { get_input: network_use_existing }
            resource_id: { get_input: common_network_name }
            network:
                name: { get_input: common_network_name }
                edge_gateway: { get_input: edge_gateway }
                static_range: 10.67.90.129-10.67.90.254
                netmask: 255.255.255.0
                gateway_ip: 10.67.90.1
                dns:
                    - 10.67.90.1
                    - 8.8.8.8
                dhcp:
                    dhcp_range: 10.67.90.2-10.67.90.128
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        relationships:
            - target: common_network_nat
              type: cloudify.vcloud.net_connected_to_public_nat

    common_network_nat:
        type: cloudify.vcloud.nodes.PublicNAT
        properties:
            use_external_resource: { get_input: common_network_public_nat_use_existing }
            nat:
                edge_gateway: { get_input: edge_gateway }
                public_ip: { get_input: mongo_ip_address }
            rules:
                - type: SNAT
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }

    mongo_server_nat:
        type: cloudify.vcloud.nodes.PublicNAT
        properties:
            nat:
                edge_gateway: { get_input: edge_gateway }
                public_ip: { get_input: mongo_ip_address }
            rules:
             - type: DNAT
               protocol: tcp
               original_port: { get_input: mongo_ssh }
               translated_port: 22
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }

    node_security_group:
        type: cloudify.vcloud.nodes.SecurityGroup
        properties:
            security_group:
                name: nodevcloud_security_group
                edge_gateway: { get_input: edge_gateway }
            rules:
                - source: any
                  destination: internal
                  destination_port: { get_input: mongo_ssh }
                  action: allow
                  description: >
                        ssh to mongo
                  protocol: TCP
                - source: internal
                  destination: internal
                  destination_port: 27017
                  action: allow
                  description: >
                        mongo <-> nodejs connection
                  protocol: TCP
                - source: external
                  destination: internal
                  destination_port: 8080
                  action: allow
                  description: >
                        http to nodejs
                  protocol: TCP
                - source: internal
                  destination: any
                  action: allow
                  description: >
                         backward network connection for host updates
                  protocol: any
                - source: external
                  destination: internal
                  action: allow
                  description: >
                         Allow ping
                  protocol: ICMP
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }


outputs:
    mongodb_internal_ip:
        value: { get_attribute: [mongod_host, ip] }
    mongodb_public_ip:
        value: { get_attribute: [mongo_server_nat, public_ip] }
    common_public_key:
        value: { get_input: user_public_key }
    common_public_key_user:
        value: { get_input: server_user }
    common_private_key:
        value: { get_input: user_private_key }
    mongodb_ssh_translated_port:
        value: { get_input: mongo_ssh }
    vcloud_config:
        value: { get_property: [vcloud_configuration, vcloud_config] }
